// AUTO-GENERATED CODE - DO NOT EDIT MANUALLY!
// This file is automatically generated from YAML files in DialogueData folder
// Regenerated whenever YAML files are modified

using System.Collections.Generic;
using System.Linq;

namespace DialogueSystem
{
    public static class EmbeddedDialogues
    {
        public const string CrystalBoxOpened = "title: \"Crystal Box Opening\"\r\nlines:\r\n  - id: \"start\"\r\n    speaker: \"Narrator\"\r\n    text: \"The golden key fits perfectly into the crystal box's intricate lock.\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"As you turn the key, the box begins to glow with an ethereal light.\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"The lid slowly opens, revealing a magnificent crystal that seems to contain swirling galaxies within.\"\r\n    \r\n  - speaker: \"Player\"\r\n    text: \"Incredible! This crystal... it's like holding a piece of the universe itself.\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"You carefully remove the crystal from its resting place. The box closes and crumbles to dust.\"\r\n    \r\n  - speaker: \"System\"\r\n    text: \"Crystal obtained! The final chamber should now be accessible.\"\r\n    trigger: \"crystal_box_opened\"\r\n";

        public const string KeyCollected = "title: \"Key Collection\"\r\nlines:\r\n  - id: \"start\"\r\n    speaker: \"Narrator\"\r\n    text: \"You've found an ancient golden key! It feels warm to the touch and pulses with mysterious energy.\"\r\n    \r\n  - speaker: \"Player\"\r\n    text: \"This must be important... I can sense its power from here.\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"The key seems to resonate with something nearby. Perhaps it will unlock a hidden chamber?\"\r\n    \r\n  - speaker: \"System\"\r\n    text: \"Key acquired! Look for a crystal box that this key might unlock.\"\r\n    trigger: \"key_collected\"\r\n";

        public const string MuseumEntrance = "title: \"Museum Entrance\"\r\nlines:\r\n  - id: \"start\"\r\n    speaker: \"Guard\"\r\n    text: \"Stop! The museum is closed. What are you doing here?\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"You need to choose how to respond to the guard.\"\r\n    choices_from_story_manager: true\r\n    story_location: \"MuseumEntrance\"\r\n    \r\n  - id: \"sneak_success\"\r\n    speaker: \"Narrator\"\r\n    text: \"You successfully sneak past the guard into the museum.\"\r\n    trigger: \"enter_museum\"\r\n    \r\n  - id: \"caught\"\r\n    speaker: \"Guard\"\r\n    text: \"Nice try! You're coming with me.\"\r\n    trigger: \"game_over\"\r\n";

        public const string TestDialogue = "title: \"Test Dialogue\"\r\nlines:\r\n  - id: \"start\"\r\n    speaker: \"Guard\"\r\n    text: \"Hey, you're not supposed to be here!\"\r\n    \r\n  - speaker: \"Player\"\r\n    text: \"I was just leaving leaves...\"\r\n    trigger: \"start_stealth_mode\"\r\n";

        public const string Tutorial = "title: \"Tutorial - Tower of Time Heist\"\r\nlines:\r\n  - id: \"start\"\r\n    speaker: \"Mysterious Voice\"\r\n    text: \"Welcome, time thief. You stand before the Tower of Time, where ancient treasures await those brave enough to seize them.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"But first, you must master the arts of movement and time manipulation.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Use W, A, S, D keys to move around. Try walking forward to the tower entrance.\"\r\n    trigger: \"enable_movement\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Good! You can also move backwards with S, strafe left with A, and strafe right with D.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Move your mouse to look around. Notice how you can look up at the towering structure above.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"You can adjust your mouse sensitivity by scrolling the mouse wheel. Try it now.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"The tower's defenses include moving platforms and temporal anomalies. You'll need to be agile.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Press SPACE to jump. You'll need this to reach higher platforms and cross gaps.\"\r\n    trigger: \"show_jump_platform\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Practice jumping onto that flying platform ahead.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"Excellent! But raw agility alone won't be enough. The tower's greatest defense is time itself.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"Anomalies have pros and cons, just like everything, so can be used.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Look for shimmering temporal rifts - they recharge your time manipulation abilities.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"The tower has five floors, each guarded by temporal puzzles and traps.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"Ancient mechanisms respond to those who can do what needed. Platforms that seem impossible to reach...\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"...become accessible when gravity reverse.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Remember: Moving platforms will freeze in place, but you can still move freely.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"At the tower's peak lies the Chrono Crystal - a treasure that grants its wielder dominion over time.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"But beware - the tower's guardians grow stronger as you ascend.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"Now go, time thief. The tower awaits, and dawn approaches. You have one day before the temporal seal reactivates.\"\r\n    \r\n  - speaker: \"Tutorial\"\r\n    text: \"Good luck! Remember - W,A,S,D to move, SPACE to jump, and master the flow of time itself!\"\r\n    trigger: \"start_timer\"\r\n    \r\n  - id: \"tutorial_complete\"\r\n    speaker: \"System\"\r\n    text: \"Tutorial Complete. The Tower of Time awaits your infiltration. Go find key higher.\"\r\n    trigger: \"tutorial_finished\"\r\n";

        public const string Victory = "title: \"Victory\"\r\nlines:\r\n  - id: \"start\"\r\n    speaker: \"Narrator\"\r\n    text: \"You approach the final chamber, the crystal pulsing with energy in your hands.\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"As you step into the sacred space, the crystal begins to levitate, casting rainbow light across ancient walls.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"Well done, seeker. You have proven yourself worthy of the Tower's greatest treasure.\"\r\n    \r\n  - speaker: \"Mysterious Voice\"\r\n    text: \"The Chrono Crystal is yours. With it, you command time itself.\"\r\n    \r\n  - speaker: \"Player\"\r\n    text: \"The power... I can feel it flowing through me. Past, present, and future are all within my grasp.\"\r\n    \r\n  - speaker: \"Narrator\"\r\n    text: \"The tower begins to shimmer and fade around you as reality bends to your newfound mastery.\"\r\n    \r\n  - speaker: \"System\"\r\n    text: \"Congratulations! You have successfully completed the Tower of Time heist!\"\r\n    trigger: \"win_trigger\"\r\n    \r\n  - id: \"victory_complete\"\r\n    speaker: \"System\"\r\n    text: \"Thank you for playing! Your mastery of time and space is now absolute.\"\r\n";

        private static readonly Dictionary<string, string> _dialogues = new Dictionary<string, string>
        {
            ["crystal_box_opened"] = CrystalBoxOpened,
            ["key_collected"] = KeyCollected,
            ["museum_entrance"] = MuseumEntrance,
            ["test_dialogue"] = TestDialogue,
            ["tutorial"] = Tutorial,
            ["victory"] = Victory
        };

        public static string GetDialogue(string name)
        {
            return _dialogues.TryGetValue(name, out string dialogue) ? dialogue : null;
        }

        public static bool HasDialogue(string name)
        {
            return _dialogues.ContainsKey(name);
        }

        public static string[] GetAllDialogueNames()
        {
            return _dialogues.Keys.ToArray();
        }

        public static Dictionary<string, string> GetAllDialogues()
        {
            return new Dictionary<string, string>(_dialogues);
        }
    }
}
